{
  "$id": "https://sikka.tech/chain.schema.json",
  "$schema": "http://json-schema.org/draft-07/schema",
  "title": "Chain",
  "description": "Chain.json is a metadata file that contains information about a blockchain.",
  "type": "object",
  "required": [
    "chainName",
    "chainType"
  ],
  "properties": {
    "$schema": {
      "type": "string",
      "minLength": 1,
      "pattern": "^(\\.\\./)+chain\\.schema\\.json$"
    },
    "website": {
      "type": "string",
      "minLength": 1,
      "format": "uri"
    },
    "slip44": {
      "type": "number"
    },
    "fees": {
      "type": "object",
      "required": [
        "feeTokens"
      ],
      "properties": {
        "feeTokens": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/feeToken"
          }
        }
      },
      "additionalProperties": false
    },
    "staking": {
      "type": "object",
      "required": [
        "stakingTokens"
      ],
      "properties": {
        "stakingTokens": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/stakingToken"
          }
        },
        "lockDuration": {
          "type": "object",
          "properties": {
            "blocks": {
              "type": "number",
              "description": "The number of blocks for which the staked tokens are locked."
            },
            "time": {
              "type": "string",
              "minLength": 1,
              "description": "The approximate time for which the staked tokens are locked."
            }
          },
          "additionalProperties": false,
          "minProperties": 1
        }
      },
      "additionalProperties": false
    },
    "codebase": {
      "type": "object",
      "properties": {
        "language": {
          "$ref": "#/$defs/language"
        },
        "sdk": {
          "$ref": "#/$defs/sdk"
        },
        "cosmwasm": {
          "$ref": "#/$defs/cosmwasm"
        },
        "ibc": {
          "$ref": "#/$defs/ibc"
        }
      },
      "additionalProperties": false
    },
    "images": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "png": {
            "type": "string",
            "minLength": 1,
            "format": "uri-reference",
            "pattern": "^https://raw\\.githubusercontent\\.com/cosmos/chain-registry/master/(|testnets/|_non-cosmos/)[a-z0-9]+/images/.+\\.png$"
          },
          "svg": {
            "type": "string",
            "minLength": 1,
            "format": "uri-reference",
            "pattern": "^https://raw\\.githubusercontent\\.com/cosmos/chain-registry/master/(|testnets/|_non-cosmos/)[a-z0-9]+/images/.+\\.svg$"
          },
          "theme": {
            "type": "object",
            "properties": {
              "circle": {
                "type": "boolean"
              },
              "monochrome": {
                "type": "boolean"
              },
              "primaryColorHex": {
                "type": "string",
                "minLength": 1,
                "pattern": "^#([0-9a-fA-F]{6}|[0-9a-fA-F]{8})$"
              },
              "backgroundColorHex": {
                "type": "string",
                "minLength": 1,
                "pattern": "^(#([0-9a-fA-F]{6}|[0-9a-fA-F]{8})|none)$"
              },
              "darkMode": {
                "type": "boolean"
              }
            },
            "minProperties": 1,
            "additionalProperties": false
          },
          "imageSync": {
            "$ref": "#/$defs/pointer"
          }
        },
        "anyOf": [
          {
            "required": [
              "png"
            ]
          },
          {
            "required": [
              "svg"
            ]
          }
        ],
        "additionalProperties": false
      }
    },
    "description": {
      "type": "string",
      "minLength": 1,
      "maxLength": 3000
    },
    "apis": {
      "type": "object",
      "properties": {
        "rpc": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/endpoint"
          }
        },
        "rest": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/endpoint"
          }
        },
        "grpc": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/endpoint"
          }
        },
        "wss": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/endpoint"
          }
        },
        "grpcWeb": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/endpoint"
          }
        },
        "evmHttpJsonrpc": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/endpoint"
          }
        }
      },
      "additionalProperties": false
    },
    "explorers": {
      "type": "array",
      "items": {
        "$ref": "#/$defs/explorer"
      }
    },
    "keywords": {
      "type": "array",
      "maxContains": 20,
      "items": {
        "type": "string",
        "minLength": 1
      }
    },
    "chainName": {
      "type": "string",
      "minLength": 1,
      "pattern": "[a-z0-9]+"
    },
    "chainType": {
      "type": "string",
      "minLength": 1,
      "enum": [
        "cosmos",
        "eip155",
        "bip122",
        "polkadot",
        "solana",
        "algorand",
        "arweave",
        "ergo",
        "fil",
        "hedera",
        "monero",
        "reef",
        "stacks",
        "starknet",
        "stellar",
        "tezos",
        "vechain",
        "waves",
        "xrpl",
        "unknown"
      ],
      "description": "The 'type' of chain as the corresponding CAIP-2 Namespace value. E.G., 'cosmos' or 'eip155'. Namespaces cna be found here: https://github.com/ChainAgnostic/namespaces/tree/main."
    },
    "chainId": {
      "type": "string",
      "minLength": 1
    },
    "preForkChainName": {
      "type": "string",
      "minLength": 1,
      "pattern": "[a-z0-9]+"
    },
    "prettyName": {
      "type": "string",
      "minLength": 1
    },
    "networkType": {
      "enum": [
        "mainnet",
        "testnet",
        "devnet"
      ]
    },
    "bech32Prefix": {
      "type": "string",
      "minLength": 1,
      "description": "The default prefix for the human-readable part of addresses that identifies the coin type. Must be registered with SLIP-0173. E.g., 'cosmos'"
    },
    "nodeHome": {
      "type": "string",
      "minLength": 1
    },
    "keyAlgos": {
      "type": "array",
      "items": {
        "type": "string",
        "enum": [
          "secp256k1",
          "ethsecp256k1",
          "ed25519",
          "sr25519",
          "bn254"
        ],
        "uniqueItems": true
      }
    },
    "extraCodecs": {
      "type": "array",
      "items": {
        "type": "string",
        "minLength": 1,
        "enum": [
          "ethermint",
          "injective"
        ],
        "uniqueItems": true
      }
    }
  },
  "additionalProperties": false,
  "$defs": {
    "peer": {
      "type": "object",
      "required": [
        "id",
        "address"
      ],
      "properties": {
        "id": {
          "type": "string",
          "minLength": 1
        },
        "address": {
          "type": "string",
          "minLength": 1
        },
        "provider": {
          "type": "string",
          "minLength": 1
        }
      },
      "additionalProperties": false
    },
    "endpoint": {
      "type": "object",
      "required": [
        "address"
      ],
      "properties": {
        "address": {
          "type": "string",
          "minLength": 1
        }
      },
      "additionalProperties": false
    },
    "explorer": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "minLength": 1
        },
        "url": {
          "type": "string",
          "minLength": 1
        },
        "txPage": {
          "type": "string",
          "minLength": 1
        },
        "accountPage": {
          "type": "string",
          "minLength": 1
        },
        "validatorPage": {
          "type": "string",
          "minLength": 1
        },
        "proposalPage": {
          "type": "string",
          "minLength": 1
        },
        "blockPage": {
          "type": "string",
          "minLength": 1
        }
      },
      "additionalProperties": false
    },
    "repo": {
      "type": "string",
      "format": "uri",
      "minLength": 1,
      "description": "URL of the code repository."
    },
    "version": {
      "type": "string",
      "minLength": 1,
      "pattern": "^v?\\d+(\\.\\d+){0,2}$",
      "description": "Simple version string (e.g., 'v1.0.0')."
    },
    "tag": {
      "type": "string",
      "minLength": 1,
      "pattern": "^v?\\d+(\\.\\d+){0,2}(-[\\w\\.\\-]+)?$",
      "description": "Detailed version identifier (e.g., 'v1.0.0-a1s2f43g')."
    },
    "sdk": {
      "type": "object",
      "required": [
        "type"
      ],
      "minProperties": 1,
      "additionalProperties": false,
      "properties": {
        "type": {
          "type": "string",
          "minLength": 1,
          "enum": [
            "cosmos",
            "penumbra",
            "other"
          ]
        },
        "version": {
          "$ref": "#/$defs/version"
        },
        "repo": {
          "$ref": "#/$defs/repo"
        },
        "tag": {
          "$ref": "#/$defs/tag"
        }
      }
    },
    "ibc": {
      "type": "object",
      "required": [
        "type"
      ],
      "minProperties": 1,
      "additionalProperties": false,
      "properties": {
        "type": {
          "type": "string",
          "minLength": 1,
          "enum": [
            "go",
            "rust",
            "other"
          ]
        },
        "version": {
          "$ref": "#/$defs/version"
        },
        "repo": {
          "$ref": "#/$defs/repo"
        },
        "tag": {
          "$ref": "#/$defs/tag"
        },
        "icsEnabled": {
          "type": "array",
          "description": "List of IBC apps (usually corresponding to a ICS standard) which have been enabled on the network.",
          "items": {
            "type": "string",
            "minLength": 1,
            "description": "IBC app or ICS standard.",
            "enum": [
              "ics20-1",
              "ics27-1",
              "mauth"
            ]
          }
        }
      }
    },
    "cosmwasm": {
      "type": "object",
      "minProperties": 1,
      "additionalProperties": false,
      "properties": {
        "version": {
          "$ref": "#/$defs/version"
        },
        "repo": {
          "$ref": "#/$defs/repo"
        },
        "tag": {
          "$ref": "#/$defs/tag"
        },
        "enabled": {
          "type": "boolean"
        },
        "path": {
          "type": "string",
          "minLength": 1,
          "description": "Relative path to the cosmwasm directory. ex. $HOME/.juno/data/wasm",
          "pattern": "^\\$HOME.*$"
        }
      }
    },
    "consensus": {
      "type": "object",
      "required": [
        "type"
      ],
      "properties": {
        "type": {
          "type": "string",
          "minLength": 1,
          "enum": [
            "tendermint",
            "cometbft",
            "sei-tendermint"
          ]
        },
        "version": {
          "$ref": "#/$defs/version"
        },
        "repo": {
          "$ref": "#/$defs/repo"
        },
        "tag": {
          "$ref": "#/$defs/tag"
        }
      },
      "additionalProperties": false
    },
    "language": {
      "type": "object",
      "required": [
        "type"
      ],
      "minProperties": 1,
      "additionalProperties": false,
      "properties": {
        "type": {
          "type": "string",
          "minLength": 1,
          "enum": [
            "go",
            "rust",
            "solidity",
            "other"
          ]
        },
        "version": {
          "$ref": "#/$defs/version"
        },
        "repo": {
          "$ref": "#/$defs/repo"
        },
        "tag": {
          "$ref": "#/$defs/tag"
        }
      }
    },
    "binaries": {
      "type": "object",
      "minProperties": 1,
      "additionalProperties": false,
      "properties": {
        "linux/amd64": {
          "type": "string",
          "minLength": 1,
          "format": "uri"
        },
        "linux/arm64": {
          "type": "string",
          "minLength": 1,
          "format": "uri"
        },
        "darwin/amd64": {
          "type": "string",
          "minLength": 1,
          "format": "uri"
        },
        "darwin/arm64": {
          "type": "string",
          "minLength": 1,
          "format": "uri"
        },
        "windows/amd64": {
          "type": "string",
          "minLength": 1,
          "format": "uri"
        },
        "windows/arm64": {
          "type": "string",
          "minLength": 1,
          "format": "uri"
        }
      }
    },
    "pointer": {
      "type": "object",
      "description": "The (primary) key used to identify an object within the Chain Registry.",
      "required": [
        "chainName"
      ],
      "properties": {
        "chainName": {
          "type": "string",
          "minLength": 1,
          "description": "The chain name or platform from which the object resides. E.g., 'cosmoshub', 'ethereum', 'forex', or 'nasdaq'"
        },
        "baseDenom": {
          "type": "string",
          "minLength": 1,
          "description": "The base denom of the asset from which the object originates. E.g., when describing ATOM from Cosmos Hub, specify 'uatom', NOT 'atom' nor 'ATOM'; base units are unique per platform."
        }
      },
      "additionalProperties": false
    },
    "feeToken": {
      "type": "object",
      "required": [
        "denom"
      ],
      "properties": {
        "denom": {
          "type": "string",
          "minLength": 1
        },
        "fixedMinGasPrice": {
          "type": "number"
        },
        "lowGasPrice": {
          "type": "number"
        },
        "averageGasPrice": {
          "type": "number"
        },
        "highGasPrice": {
          "type": "number"
        },
        "gasCosts": {
          "type": "object",
          "properties": {
            "cosmosSend": {
              "type": "number"
            },
            "ibcTransfer": {
              "type": "number"
            }
          },
          "additionalProperties": false,
          "minProperties": 1
        }
      },
      "additionalProperties": false
    },
    "stakingToken": {
      "type": "object",
      "required": [
        "denom"
      ],
      "properties": {
        "denom": {
          "type": "string",
          "minLength": 1
        }
      },
      "additionalProperties": false
    }
  },
  "allOf": [
    {
      "if": {
        "properties": {
          "chain_type": {
            "const": "cosmos"
          }
        }
      },
      "then": {
        "required": [
          "bech32_prefix"
        ]
      }
    },
    {
      "if": {
        "properties": {
          "chain_type": {
            "enum": [
              "cosmos",
              "eip155"
            ]
          }
        }
      },
      "then": {
        "required": [
          "chain_id"
        ]
      }
    }
  ]
}